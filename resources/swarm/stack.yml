
# this file is meant for Docker Swarm stacks only
# trying it in compose will fail because of multiple replicas trying to bind to the same port
# Swarm currently does not support Compose Spec, so we'll pin to the older version 3.9

version: "3.9"

services:

  vote:
    image: dockersamples/examplevotingapp_vote
    # ports:
    #  - 5000:80
    deploy:
      replicas: 2
      # deploy.labels != service level labels
      labels:
          - "traefik.enable=true"
          - "traefik.http.routers.vote.rule=Host(`vote.crafteo.training.crafteo.io`)"
          - "traefik.http.routers.vote.entrypoints=web,websecure"
          - "traefik.http.routers.vote.tls=true"
          - "traefik.http.routers.vote.tls.certresolver=acmeresolver"
          - "traefik.http.services.vote.loadbalancer.server.port=80"
        
  result:
    image: dockersamples/examplevotingapp_result
    # ports:
    #  - 5001:80
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.result.rule=Host(`result.crafteo.training.crafteo.io`)"
        - "traefik.http.routers.result.entrypoints=web,websecure"
        - "traefik.http.routers.result.tls=true"
        - "traefik.http.routers.result.tls.certresolver=acmeresolver"
        - "traefik.http.services.result.loadbalancer.server.port=80"
    
  redis:
    image: redis:alpine

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - db-data:/var/lib/postgresql/data

  worker:
    image: dockersamples/examplevotingapp_worker
    deploy:
      replicas: 2

volumes:
  db-data: