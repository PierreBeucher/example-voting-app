# Extends ../docker-compose.yml
# Use with
#  docker-compose -f docker-compose.yml -f resources/traefik.yml up -d
version: "3"

services:
  traefik:
    image: traefik:v2.3
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # Enable Let's Encrypt
      - --certificatesresolvers.acmeresolver.acme.email=acme@crafteo.io
      - --certificatesresolvers.acmeresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.acmeresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  vote:
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.vote.rule=Host(`${VOTE_URL}`)"
        - "traefik.http.routers.vote.entrypoints=websecure"
        - "traefik.http.routers.vote.tls=true"
        - "traefik.http.routers.vote.tls.certresolver=acmeresolver"
        - "traefik.http.services.vote.loadbalancer.server.port=80"

  result:
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.result.rule=Host(`${RESULT_URL}`)"
        - "traefik.http.routers.result.entrypoints=websecure"
        - "traefik.http.routers.result.tls=true"
        - "traefik.http.routers.result.tls.certresolver=acmeresolver"
        - "traefik.http.services.result.loadbalancer.server.port=80"